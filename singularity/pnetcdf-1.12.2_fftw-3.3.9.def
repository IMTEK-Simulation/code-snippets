Bootstrap: localimage
From: mpibase.sif

%post
        
    if [ -e /usr/share/modulefiles ]; then
        export MODULEPATH=/usr/share/modulefiles
        source /usr/share/lmod/lmod/init/bash
        module load mpi
    fi

    export PATH=/usr/local/bin:$PATH
    export LD_RUN_PATH=/usr/lib64:/usr/local/lib:/usr/local/lib64:$LD_RUN_PATH
    export LD_LIBRARY_PATH=/usr/lib64:/usr/local/lib:/usr/local/lib64:$LD_LIBRARY_PATH
    export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH
    export MANPATH=/usr/local/share/man:$MANPATH

    export FFTW_VERSION=3.3.9
    export MPI4PY_VERSION=3.0.3 
    export HDF5_VERSION=1.10.6 
    export PNETCDF_VERSION=1.12.2
    export NETCDF4_VERSION=4.7.3
    export NETCDF4_PYTHON_VERSION=1.5.5.1

    if $(dnf --version); then
        dnf install -y cmake libcurl-devel m4 python3-devel python3-setuptools python3-pip python3-numpy python3-scipy python3-pytest
    else
        export DEBIAN_FRONTEND=noninteractive
        export DEBCONF_NONINTERACTIVE_SEEN=true 

        apt-get -qq update
        apt-get -y -qq install \
            cmake \
            libcurl4-openssl-dev \
            m4 \
            python3-pip \
            python3-breathe \
            python3-dev \
            python3-numpy \
            python3-pytest \
            python3-scipy \
            python3-setuptools
        rm -rf /var/lib/apt/lists/* 
    fi

    BUILDDIR=/tmp 
    PREFIX=/usr/local

    # Manual install of MPI parallel FFTW
    curl http://www.fftw.org/fftw-${FFTW_VERSION}.tar.gz | tar -xzC ${BUILDDIR} &&
      cd ${BUILDDIR}/fftw-${FFTW_VERSION} &&
      ./configure --enable-shared --enable-mpi --disable-fortran --enable-sse2 --enable-avx --enable-avx2 --prefix=${PREFIX} &&
      make -j 4 &&
      make install &&
      cd -

    # Install parallel version of the NetCDF library from the sources.
    # This is necessary because parallel compiles (if existing) are
    # broken on most distributions.
    curl https://parallel-netcdf.github.io/Release/pnetcdf-${PNETCDF_VERSION}.tar.gz | tar -xzC ${BUILDDIR} &&
      cd ${BUILDDIR}/pnetcdf-${PNETCDF_VERSION} &&
      CC=mpicc CXX=mpicxx ./configure --disable-fortran --disable-cxx --enable-shared --prefix=${PREFIX} &&
      make -j 4 &&
      make install &&
      cd -

    curl https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.10/hdf5-${HDF5_VERSION}/src/hdf5-${HDF5_VERSION}.tar.gz | tar -xzC ${BUILDDIR} &&#
      cd ${BUILDDIR}/hdf5-${HDF5_VERSION} &&
      CC=mpicc CXX=mpicxx ./configure --enable-parallel --prefix=${PREFIX} &&
      make -j 4 &&
      make install &&
      cd -

    # We need to compile NetCDF ourselves because there is no package that has
    # parallel PnetCDF and HDF5 enabled.
    curl https://www.unidata.ucar.edu/downloads/netcdf/ftp/netcdf-c-${NETCDF4_VERSION}.tar.gz | tar -xzC ${BUILDDIR} &&
      mkdir -p ${BUILDDIR}/netcdf-c-build &&
      cd ${BUILDDIR}/netcdf-c-build &&
      cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${PREFIX} -DCMAKE_C_COMPILER=mpicc -DCMAKE_CXX_COMPILER=mpicxx -DUSE_PARALLEL=ON -DENABLE_PARALLEL4=ON -DENABLE_PNETCDF=ON ${BUILDDIR}/netcdf-c-${NETCDF4_VERSION} &&
      make -j 4 &&
      make install &&
      cd -

    # Install mpi4py
    CC=mpicc python3 -m pip install --no-binary mpi4py mpi4py==${MPI4PY_VERSION}

    # Install netcdf4-python and make sure that it is compiled (no-binary),
    # otherwise it will not have parallel support.
    NETCDF4_DIR=${PREFIX} HDF5_DIR=${PREFIX} CC=mpicc python3 -m pip install --no-binary netCDF4 netCDF4==${NETCDF4_PYTHON_VERSION}

%runscript

    if [ -n "$MODULEPATH" ]; then
        module purge
        module load GCC/9.3.0 OpenMPI/4.1.0rc1 Singularity-Tools
    fi

    python3 "$@" 

%environment

    export PATH=/usr/local/bin:$PATH
    export LD_RUN_PATH=/usr/lib64:/usr/local/lib:/usr/local/lib64:$LD_RUN_PATH
    export LD_LIBRARY_PATH=/usr/lib64:/usr/local/lib:/usr/local/lib64:$LD_LIBRARY_PATH
    export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH
    export MANPATH=/usr/local/share/man:$MANPATH
